{"mappings":"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","sources":["src/models/user.model.js","src/collections/users.js","src/views/user-data.view.js","src/Users.js","src/views/notification.view.js","src/views/users.view.js","src/app.router.js","src/app.js"],"sourcesContent":["import Backbone from \"backbone\";\nimport { extend, isEmpty } from \"underscore\";\n\nexport const UserModel = Backbone.Model.extend({\n  defaults: {\n    name: \"\",\n    phone: 0,\n  },\n  url: \"/user\",\n  validate: function (attrs) {\n    const regExp = /^(\\d|\\+)[\\d\\\\-]+$/;\n    const errors = {};\n    if (!attrs.name.length) {\n      extend(errors, { required: true });\n    }\n    if (!regExp.test(attrs.phone)) {\n      extend(errors, { pattern: true });\n    }\n    if (!isEmpty(errors)) {\n      return errors;\n    }\n  },\n});\n","import Backbone from \"backbone\";\nimport { UserModel } from \"../models/user.model\";\n\nexport const UsersCollection = Backbone.Collection.extend({\n  model: UserModel,\n  url: \"/users\",\n});\n","import Backbone from \"backbone\";\nimport { template } from \"underscore\";\n\nconst template$ = `\n        <td>\n            <%=name%>\n        </td>\n        <td>\n            <%=phone%>\n        </td>\n        <td>\n                <button class=\"edit button is-primary is-small\">Edit</button>\n              \n                <button class=\"remove button is-danger is-small\">REMOVE</button>         \n        </td>\n`;\n\nconst $editModeTemplate = `\n    <td>\n            <div class=\"control\">\n                <input class=\"input is-small\" type=\"text\" value=\"<%=name%>\">\n                 <p class=\"validationNameError is-hidden help is-danger\">This name is invalid</p>\n            </div>\n        </td>\n        <td>\n         \n            <div class=\"control\">\n                <input class=\"input is-small\" type=\"text\" value=\"<%=phone%>\">\n                <p class=\"validationPhoneError is-hidden help is-danger\">This phone is invalid</p>\n            </div>\n            </td>\n        <td>\n                <button class=\"save button is-link is-small\">SAVE</button>\n                <button class=\"cancel button is-link is-small\">CANCEL</button>        \n        </td>\n`;\nexport const UserDataView = Backbone.View.extend({\n  events: {\n    \"click .remove\": \"clear\",\n    \"click .edit\": \"toggleEditMode\",\n    \"click .cancel\": \"toggleEditMode\",\n    \"click .save\": \"save\",\n  },\n  tagName: \"tr\",\n  template: template(template$),\n  editTemplate: template($editModeTemplate),\n  isEditMode: false,\n  initialize: function () {\n    this.listenTo(this.model, \"change\", this.render);\n    this.listenTo(this.model, \"destroy\", this.remove);\n    this.listenTo(this.model, \"invalid\", (model, error) =>\n      this.markAllTouched(model, error)\n    );\n    this.listenTo(this.model, \"request\", this.removeErrorsBlock);\n  },\n  render: function () {\n    const tpl = this.isEditMode ? this.editTemplate : this.template;\n    this.$el.html(tpl(this.model.toJSON()));\n    return this;\n  },\n  clear: function () {\n    this.model.destroy();\n  },\n  toggleEditMode: function () {\n    this.isEditMode = !this.isEditMode;\n    this.render();\n  },\n  save() {\n    const inputNameValue = this.$(\"input\")[0].value.trim();\n    const inputPhoneValue = this.$(\"input\")[1].value.trim();\n    this.model.save(\n      {\n        name: inputNameValue,\n        phone: inputPhoneValue,\n      },\n      { patch: true, validate: true }\n    );\n  },\n  markAllTouched(model, error) {\n    if (error.required) {\n      this.$(\".validationNameError\").removeClass(\"is-hidden\");\n    }\n    if (error.pattern) {\n      this.$(\".validationPhoneError\").removeClass(\"is-hidden\");\n    }\n  },\n  removeErrorsBlock() {\n    this.$(\".validationNameError\").addClass(\"is-hidden\");\n    this.$(\".validationPhoneError\").addClass(\"is-hidden\");\n  },\n});\n","// mock collection\nexport class Users {\n  users = [\n    {\n      name: \"John Doy1\",\n      phone: 85564675621,\n    },\n    {\n      name: \"John Doy2\",\n      phone: 85564675621,\n    },\n    {\n      name: \"John Doy3\",\n      phone: 85564675621,\n    },\n    {\n      name: \"John Doy4\",\n      phone: 85564675621,\n    },\n    {\n      name: \"John Doy5\",\n      phone: 85564675621,\n    },\n  ];\n  constructor() {}\n}\n","import Backbone from \"backbone\";\r\n\r\nexport const NotificationWindow = Backbone.View.extend({\r\n    el: '.notification-container',\r\n    initialize() {\r\n        this.$container = document.querySelector('.notification-container');\r\n        this.$button = this.$container.querySelector('.delete');\r\n        this.$button.addEventListener('click', () => {\r\n            this.$container.style.visibility = 'hidden';\r\n        });\r\n    },\r\n    open(message) {\r\n        const notify = this.$container.querySelector('.notification');\r\n        const textBlock = notify.querySelector('p');\r\n        this.$container.style.visibility = 'visible';\r\n        textBlock.textContent = message;\r\n    }\r\n})","import Backbone from \"backbone\";\nimport { UsersCollection } from \"../collections/users\";\nimport { template } from \"underscore\";\nimport { UserDataView } from \"./user-data.view\";\nimport { Users } from \"../Users\";\nimport {NotificationWindow} from \"./notification.view\";\n\nconst $template = `\n    <table class=\"table is-fullwidth\">\n        <thead>\n            <tr>\n                <th>User</th>\n                <th>Phone</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n        </tbody>\n    </table>\n    <progress class=\"progress is-small is-primary\" max=\"100\">15%</progress>\n    <div class=\"user-creation is-half\">\n       <div class=\"field\">\n            <label class=\"label\">Name</label>\n            <div class=\"control\">\n                <input class=\"name input\" type=\"text\" placeholder=\"Text input\">\n            </div>\n            <p class=\"validationNameError is-hidden help is-danger\">This name is invalid</p>\n        </div>\n        <div class=\"field\">\n            <label class=\"label\">Phone</label>\n            <div class=\"control\">\n                <input class=\"phone input\" type=\"text\" placeholder=\"Text input\">\n            </div>\n            <p class=\"validationPhoneError is-hidden help is-danger\">This phone is invalid</p>\n        </div>\n        <div class=\"field is-grouped\">\n            <div class=\"control\">\n                <button class=\"user-add-button button is-primary\">Submit</button>\n            </div>\n        </div>\n      </div>\n`;\nexport const UsersView = Backbone.View.extend({\n  el: \"#app\",\n  events: {\n    \"click .user-add-button\": \"createUser\",\n  },\n  initialize: function () {\n    this.template = template($template);\n    this.users = new UsersCollection(new Users().users);\n    this.render();\n    this.notification = new NotificationWindow();\n    this.notification.open('Welcome!');\n    this.loader = this.$(\"progress\");\n    this.$list = this.$(\"table tbody\");\n    this.listenTo(this.users, \"update\", this.updateData);\n    this.listenTo(this.users, \"change\", this.updateData);\n    this.listenTo(this.users, \"sync\", this.onSync);\n    this.updateData();\n  },\n  updateData: function () {\n    this.onProgressBar();\n    this.users.fetch({\n      success: function () {\n        this.addAll();\n      },\n      context: this,\n      error: function () {\n        this.notification.open('Server error');\n      }\n    });\n  },\n  render: function () {\n    this.$el.html(this.template());\n    this.nameInput = this.$(\"input.name\")[0];\n    this.phoneInput = this.$(\".phone\")[0];\n  },\n  addOne: function (user) {\n    const view = new UserDataView({ model: user });\n    this.$list.append(view.render().el);\n  },\n  createUser: function () {\n    this.listenTo(this.users, \"invalid\", (model, errors) =>\n      this.markAllTouched(model, errors)\n    );\n    this.listenToOnce(this.users, \"request\", this.onRequest);\n    this.users.create(\n      {\n        name: this.nameInput.value.trim(),\n        phone: this.phoneInput.value.trim(),\n      },\n      {\n        success: function (params) {\n          this.unlockButton(false);\n        }.bind(this),\n        validate: true,\n      }\n    );\n  },\n  addAll: function () {\n    this.$list.html(\"\");\n    this.users.each(this.addOne, this);\n  },\n  markAllTouched(model, error) {\n    if (error.required) {\n      this.$(\".validationNameError\").toggleClass(\"is-hidden\");\n    }\n    if (error.pattern) {\n      this.$(\".validationPhoneError\").toggleClass(\"is-hidden\");\n    }\n  },\n  removeErrorsBlock() {\n    this.$(\".validationNameError\").addClass(\"is-hidden\");\n    this.$(\".validationPhoneError\").addClass(\"is-hidden\");\n  },\n  onRequest() {\n    this.removeErrorsBlock();\n    this.unlockButton(true);\n  },\n  onProgressBar() {\n    this.loader.removeClass(\"is-hidden\");\n  },\n  offProgressBar() {\n    this.loader.addClass(\"is-hidden\");\n  },\n  onSync() {\n    this.offProgressBar();\n    this.stopListening(this.users, \"invalid\");\n  },\n  unlockButton(unlock) {\n    this.$(\".user-add-button\").prop(\"disabled\", unlock);\n    unlock\n      ? this.$(\".user-add-button\").addClass(\"is-loading\")\n      : this.$(\".user-add-button\").removeClass(\"is-loading\");\n  },\n  openNotification(message) {\n    const notificationContainer = document.querySelector('.notification-container');\n    notificationContainer.classList.add('is-hidden');\n  },\n});\n","import Backbone from \"backbone\";\nimport { UsersView } from \"./views/users.view\";\n\nconst routerOptions = {\n  routes: {\n    \"*path\": function () {\n      new UsersView();\n    },\n  },\n};\nexport const AppRouter = Backbone.Router.extend(routerOptions);\n","import Backbone from \"backbone\";\nimport { AppRouter } from \"./app.router\";\nconsole.log('@');\nwindow.onload = () => {\n  // Server imitation\n  console.log('@');\n  Backbone.ajax = function (arg1) {\n    setTimeout(() => arg1.success(), 3000);\n  };\n  new AppRouter();\n  Backbone.history.start();\n};\n"],"names":["$6269fbd8f7b7290c$export$621c2e9225361608","$parcel$interopDefault","$kL2Ep","Model","extend","defaults","name","phone","url","validate","attrs","errors","length","$2q7Wm","required","test","pattern","isEmpty","$8c04c00f722dcf98$export$703d9f52f9882c43","Collection","model","$7233c30639017289$export$25a886aa6f738cc8","View","events","tagName","template","editTemplate","isEditMode","initialize","this","listenTo","render","remove","error","markAllTouched","removeErrorsBlock","tpl","$el","html","toJSON","clear","destroy","toggleEditMode","save","inputNameValue","$","value","trim","inputPhoneValue","patch","removeClass","addClass","$503642651b36acc7$export$a69f017b19597ff5","users","$bfdc3331012b4d70$export$62c9f206d8470dc7","el","$container","document","querySelector","$button","addEventListener","style","visibility","open","message","textBlock","textContent","$a2e2bd88c7b0e208$export$a91f3ad8dde8adcb","notification","loader","$list","updateData","onSync","onProgressBar","fetch","success","addAll","context","nameInput","phoneInput","addOne","user","view","append","createUser","listenToOnce","onRequest","create","params","unlockButton","bind","each","toggleClass","offProgressBar","stopListening","unlock","prop","openNotification","classList","add","$26689b527bcc5cf4$var$routerOptions","routes","$26689b527bcc5cf4$export$8707b35fd1c03f46","Router","console","log","window","onload","ajax","arg1","setTimeout","history","start"],"version":3,"file":"index.61b1956c.js.map"}